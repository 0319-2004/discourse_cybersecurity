##カメモジュールの実装
import turtle
wn=turtle.Screen()
rito=turtle.Turtle()
rito.shape("turtle")
rito.color("blue")

distance=30
for _ in range(3):
 rito.forward(distance)
 rito.stamp()
 rito.right(20)
 distance+=10
wn.exitonclick()

## カメモジュールを使った複雑な形に挑戦
import turtle
wn=turtle.Screen()
nemo=turtle.Turtle()
nemo.pencolor("blue")
distance=50
for _ in range(30):
   
    nemo.forward (distance)
    nemo.left(90)
    distance=distance+10

##カメモジュールを使って正五角形

import turtle
wn=turtle.Screen()
rito=turtle.Turtle()

slide_length=100
for _ in range(5):
  rito.forward(slide_length)
  rito.left(72)
##色付きの線、for loop
import turtle
wn=turtle.Screen()
rusya=turtle.Turtle()
color=["yellow","red","green","blue"]

for i in color: # repeat four times
    rusya.color(i)
    rusya.forward(50)
    rusya.left(90)
    rusya.right(10)

wn.exitonclick()

#複雑なものにも挑戦
import turtle
wn=turtle.Screen()
rito=turtle.Turtle()

for _ in range(30):
    rito.speed(10)
    rito.forward(50)
    rito.left(3)
    rito.forward(-40)
    rito.right(50)
#空のstringsにfor を使って増やしてく
lett=""

for i in range(7):
    lett+="b"
print(lett)


#for文 if文混合
Challenge For each word in words, add ‘d’ to the end of the word if the word ends in “e” to make it past tense.
Otherwise, add ‘ed’ to make it past tense. Save these past tense words to a list called past_tense.

words = ["adopt", "bake", "beam", "confide", "grill", "plant", "time", "wave", "wish"]
past_tense = []
for i in words:
    if i[-1]=="e":
        past_tense.append(i+"d")
    else:
        past_tense.append(i+"ed")


For each string in the list words, find the number of characters in the string. If the number of characters in the string is greater than 3, 
add 1 to the variable num_words so that num_words should end up with the total number of words with more than 3 characters.

words = ["water", "chair", "pen", "basket", "hi", "car"]

num_words = 0
for char in words:
    if len(char) >3:
        num_words += 1
print(num_words)


# course_1_assessment_7
#1
rainfall_mi is a string that contains the average number of inches of rainfall in Michigan 
for every month (in inches) with every month separated by a comma. Write code to compute the number of months 
that have more than 3 inches of rainfall. Store the result in the variable num_rainy_months. In other words, count 
the number of items with values > 3.0.

Hard-coded answers will receive no credit.

rainfall_mi = "1.65, 1.46, 2.05, 3.03, 3.35, 3.46, 2.83, 3.23, 3.5, 2.52, 2.8, 1.85"
rainfall_month = rainfall_mi.split(",")
print(rainfall_month)

num_rainy_months = 0

for i in rainfall_month:
    if float(i)> 3.0:
        num_rainy_months +=1
print(num_rainy_months)

#2
The variable sentence stores a string. Write code to determine how many words in sentence start and end with the same letter, 
including one-letter words. Store the result in the variable same_letter_count.

Hard-coded answers will receive no credit.
sentence = "students flock to the arb for a variety of outdoor activities such as jogging and picnicking"

# Write your code here.

words = sentence.split(" ")

print(words)
same_letter_count=0
for i in words:
    if i[0] == i[-1]:
        same_letter_count +=1
        
print(same_letter_count)

#3
Write code to count the number of strings in list items that have the character w in it. Assign that number to the variable acc_num.

HINT 1: Use the accumulation pattern!

HINT 2: the in operator checks whether a substring is present in a string.

Hard-coded answers will receive no credit.

items = ["whirring", "wow!", "calendar", "wry", "glass", "", "llama","tumultuous","owing"]
acc_num = 0
for i in items:
    if "w" in i:
        acc_num +=1
print(acc_num)

#4
Write code that counts the number of words in sentence that contain either an “a” or an “e”. Store the result in the variable num_a_or_e.

Note 1: be sure to not double-count words that contain both an a and an e.

HINT 1: Use the in operator.

HINT 2: You can either use or or elif.

Hard-coded answers will receive no credit.

sentence = "python is a high level general purpose programming language that can be applied to many different classes of problems."
sentence = sentence.split(" ")
num_a_or_e = 0
for i in sentence:
    if "a" in i or "e" in i:
        num_a_or_e +=1


print(num_a_or_e)

#5
Write code that will count the number of vowels in the sentence s and assign the result to the variable num_vowels.
For this problem, vowels are only a, e, i, o, and u. Hint: use the in operator with vowels.
s = "singing in the rain and playing in the rain are two entirely different situations but both can be fun"
vowels = ['a','e','i','o','u']

# Write your code here.

num_vowels = 0
for i in s:
    if i in vowels:
        num_vowels +=1
print(num_vowels)

#while ループを使用した　ランダムな動き

import random
import turtle

def isInScreen(w,t):
    leftBound = - w.window_width() / 2
    rightBound = w.window_width() / 2
    topBound = w.window_height() / 2
    bottomBound = -w.window_height() / 2

    turtleX = t.xcor()
    turtleY = t.ycor()

    stillIn = True
    if turtleX > rightBound or turtleX < leftBound:
        stillIn = False
    if turtleY > topBound or turtleY < bottomBound:
        stillIn = False

    return stillIn

t = turtle.Turtle()
wn = turtle.Screen()

t.shape('turtle')
while isInScreen(wn,t):
    coin = random.randrange(0, 2)
    if coin == 0:
        t.left(90)
    else:
        t.right(90)

    t.forward(50)

wn.exitonclick()
